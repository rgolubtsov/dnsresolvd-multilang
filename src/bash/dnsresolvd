#!/usr/bin/env bash
# src/bash/dnsresolvd
# =============================================================================
# DNS Resolver Daemon (dnsresolvd). Version 0.1
# =============================================================================
# A daemon that performs DNS lookups for the given hostname
# passed in an HTTP request, with the focus on its implementation
# using various programming languages. (Netcat-boosted impl.)
# =============================================================================
# Copyright (C) 2017-2019 Radislav (Radicchio) Golubtsov
#
# (See the LICENSE file at the top of the source tree.)
#

# Helper constants.
declare -r _EXIT_FAILURE=1 #    Failing exit status.
declare -r _EXIT_SUCCESS=0 # Successful exit status.
declare -r _EMPTY_STRING=""
declare -r _PRINT_BANNER_OPT="-V"

declare -r _UNAME=`uname`

# If we're on OpenBSD, or on Linux, ...
  if [ ${_UNAME} == "OpenBSD" ]; then
    echo "==> ${_UNAME}: Using OpenBSD Netcat."
elif [ ${_UNAME} == "Linux"   ]; then
    echo "==> ${_UNAME}: Using Linux Netcat."
else
    echo "==> ${_UNAME}: Unix-?-"
fi

ret=${_EXIT_SUCCESS}

argc=$#

daemon_name=$0
port_number=$1

print_banner_opt=${_EMPTY_STRING}

if [ ${argc} -gt 1 ]; then
    print_banner_opt=${2^^}
fi

echo ${ret} ${argc} ${daemon_name} ${port_number} ${print_banner_opt}

if [ ${print_banner_opt} == ${_PRINT_BANNER_OPT} ]; then
    echo ${print_banner_opt}
fi

# If there is an error -- telling the OS about this.
if [ $? -eq ${_EXIT_FAILURE} ]; then
    exit    ${_EXIT_FAILURE}
fi

exit        ${_EXIT_SUCCESS}

# vim:set nu et ts=4 sw=4:
